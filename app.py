import streamlit as st
import pandas as pd
import random
import matplotlib.pyplot as plt
import seaborn as sns

# ‚Äî –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Äî
st.set_page_config(
    page_title="üåæ –ê–≥—Ä–æ-–ü–æ–≥–æ–¥–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞",
    layout="centered",
    page_icon="üå§Ô∏è",
)

st.title("üåæ –ê–≥—Ä–æ-–ü–æ–≥–æ–¥–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞")
st.markdown("–ü–æ–≥–æ–¥–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤, –∞–≥—Ä–∞—Ä–∏–µ–≤ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π.")
st.markdown("""
–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ NASA –ø–æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—É –∏ –ø–æ–º–æ–≥–∞–µ—Ç:
- üìä –ü–æ–Ω–∏–º–∞—Ç—å –ø–æ–≥–æ–¥–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
- üå± –î–µ–ª–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –ø–æ—Å–∞–¥–∫–∏
- üí° –ü–æ–ª—É—á–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
""")
st.markdown("---")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="üå§ NASA Weather Kazakhstan", layout="centered")
st.markdown("<style>h1, h2 { color: #1f77b4; }</style>", unsafe_allow_html=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
for key in ["score", "fails", "rounds", "history"]:
    if key not in st.session_state:
        st.session_state[key] = 0 if key != "history" else []

# –ó–∞–≥—Ä—É–∂–∞–µ–º CSV
df = pd.read_csv("weather_kazakhstan_with_region.csv")
df["date"] = pd.to_datetime(df["date"])

# –í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ (–µ—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –µ—Å—Ç—å)
if "region" in df.columns:
    selected_region = st.selectbox("üåç –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:", sorted(df["region"].unique()))
    df = df[df["region"] == selected_region]
else:
    st.warning("üìå –í –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–≥–∏–æ–Ω–∞—Ö. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–∏–π –∞–Ω–∞–ª–∏–∑.")

# –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω—É
date_min = df["date"].min().date()
date_max = df["date"].max().date()

import random

regions = ['–ê—Å—Ç–∞–Ω–∞', '–ê–ª–º–∞—Ç—ã', '–®—ã–º–∫–µ–Ω—Ç']
df['region'] = [random.choice(regions) for _ in range(len(df))]

# Tabs
tab1, tab2, tab3 = st.tabs(["üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "üå± –ü–æ—Å–∞–¥–∏—Ç—å –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∞—Ç—å", "üå° –£–≥–∞–¥–∞–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É"])

# ===================== üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê =====================
with tab1:
    st.header("–ê–Ω–∞–ª–∏–∑ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π")
    with st.expander("üìÜ –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É?"):
        st.info("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–¥–µ–ª—é –ø–µ—Ä–µ–¥ –ø–æ—Å–∞–¥–∫–æ–π.")
date_range = st.date_input(
    "üìÜ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç:",
    [date_min, date_max],
    min_value=date_min,
    max_value=date_max,
    key="date_range_selector"
)


if isinstance(date_range, tuple) and len(date_range) == 2:
    start, end = date_range
else:
    st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é –∏ –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É.")
    st.stop()


filtered_df = df[(df["date"].dt.date >= start) & (df["date"].dt.date <= end)]

st.line_chart(filtered_df.set_index("date")[["temperature_C", "precipitation_mm"]])

st.subheader("üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–≥–æ–¥–µ")

avg_temp = filtered_df["temperature_C"].mean()
avg_precip = filtered_df["precipitation_mm"].mean()

st.markdown(f"""
- **–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {avg_temp:.1f} ¬∞C  
- **–°—Ä–µ–¥–Ω–∏–µ –æ—Å–∞–¥–∫–∏:** {avg_precip:.1f} –º–º
""")

if avg_temp > 30 and avg_precip < 1:
    st.error("üî• –ñ–∞—Ä–∫–æ –∏ —Å—É—Ö–æ ‚Äî —Ä–∏—Å–∫ –∑–∞—Å—É—Ö–∏!")
elif avg_temp < 10 and avg_precip > 5:
    st.warning("üåß –•–æ–ª–æ–¥–Ω–æ –∏ –≤–ª–∞–∂–Ω–æ ‚Äî –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ —Å –ø–æ—Å–∞–¥–∫–æ–π.")
elif 20 <= avg_temp <= 28 and 1 <= avg_precip <= 5:
    st.success("‚úÖ –û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ—Å–µ–≤–∞!")
else:
    st.info("ü§î –£—Å–ª–æ–≤–∏—è —É–º–µ—Ä–µ–Ω–Ω—ã–µ.")

# ===================== üå± –ò–ì–†–ê ‚Ññ1 =====================
with tab2:
    st.header("üåæ Weather Decision Challenge")

row = df.sample(1).iloc[0]
date = pd.to_datetime(row["date"]).date()
temp = row["temperature_C"]
rain = row["precipitation_mm"]

st.markdown(f"üìÖ **–î–∞—Ç–∞:** {date}‚ÄÉüå° **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {temp:.1f} ¬∞C‚ÄÉüåß **–û—Å–∞–¥–∫–∏:** {rain:.1f} –º–º")

st.markdown("### –ß—Ç–æ –≤—ã —Ä–µ—à–∏—Ç–µ —Å–µ–≥–æ–¥–Ω—è?")
col1, col2 = st.columns(2)
with col1:
    plant = st.button("üå± –ü–æ—Å–∞–¥–∏—Ç—å —É—Ä–æ–∂–∞–π", key="plant")
with col2:
    wait = st.button("‚è≥ –ü–æ–¥–æ–∂–¥–∞—Ç—å", key="wait")

if plant or wait:
    st.session_state["rounds"] += 1

    if temp > 30 and rain < 1:
        outcome = "bad"
        message = "üî• –ó–∞—Å—É—Ö–∞. –£—Ä–æ–∂–∞–π –ø–æ—Å—Ç—Ä–∞–¥–∞–ª."
    elif temp < 10 and rain > 5:
        outcome = "bad"
        message = "üåß –°—ã—Ä–æ—Å—Ç—å –∏ —Ö–æ–ª–æ–¥. –£—Ä–æ–∂–∞–π –∑–∞–≥–Ω–∏–ª."
    elif 20 <= temp <= 28 and 1 <= rain <= 5:
        outcome = "good"
        message = "‚úÖ –û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ä–æ—Å—Ç–∞!"
    elif rain > 10:
        outcome = "bad"
        message = "‚òîÔ∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥–æ–∂–¥—è."
    else:
        outcome = "neutral"
        message = "ü§î –£—Å–ª–æ–≤–∏—è —É–º–µ—Ä–µ–Ω–Ω—ã–µ."

    if plant:
        if outcome == "good":
            st.success("üëç –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! " + message)
            st.session_state["score"] += 1
        elif outcome == "bad":
            st.error("üëé –û—à–∏–±–∫–∞. " + message)
            st.session_state["fails"] += 1
        else:
            st.info("üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –∏—Å—Ö–æ–¥. " + message)
    else:  # wait
        if outcome == "bad":
            st.success("‚úÖ –í—ã –∏–∑–±–µ–∂–∞–ª–∏ –ø–ª–æ—Ö–∏—Ö —É—Å–ª–æ–≤–∏–π.")
            st.session_state["score"] += 1
        elif outcome == "good":
            st.warning("üôÉ –£–ø—É—Å—Ç–∏–ª–∏ —à–∞–Ω—Å –Ω–∞ —Ö–æ—Ä–æ—à–∏–π —É—Ä–æ–∂–∞–π.")
            st.session_state["fails"] += 1
        else:
            st.info("üôÇ –û–∂–∏–¥–∞–Ω–∏–µ ‚Äî –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä.")

# ===================== üå° –ò–ì–†–ê ‚Ññ2 =====================
with tab3:
    st.header("üå° –£–≥–∞–¥–∞–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É")

row = df.sample(1).iloc[0]
date = pd.to_datetime(row["date"]).date()
true_temp = row["temperature_C"]
rain = row["precipitation_mm"]

st.markdown(f"üìÖ **–î–∞—Ç–∞:** {date}‚ÄÉüåß **–û—Å–∞–¥–∫–∏:** {rain:.1f} –º–º")

guess = st.slider("–£–≥–∞–¥–∞–π—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É (¬∞C):", -40, 50, 20)

if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", key="check_temp"):
    st.session_state["rounds"] += 1
    diff = abs(true_temp - guess)
    if diff <= 2:
        st.balloons()
        st.success(f"üéØ –ü–æ—á—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ! –ë—ã–ª–æ {true_temp:.1f} ¬∞C.")
        st.session_state["score"] += 1
    elif diff <= 5:
        st.info(f"üôÇ –ù–µ–ø–ª–æ—Ö–æ. –ë—ã–ª–æ {true_temp:.1f} ¬∞C.")
    else:
        st.error(f"üòï –û—à–∏–±–∫–∞. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ: {true_temp:.1f} ¬∞C.")
        st.session_state["fails"] += 1
if avg_temp > 30 and avg_precip < 1:
    st.error("üî• –û—á–µ–Ω—å –∂–∞—Ä–∫–æ –∏ —Å—É—Ö–æ ‚Äî –≤—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∑–∞—Å—É—Ö–∏. –ü–æ–¥—É–º–∞–π—Ç–µ –æ–± —É—Å—Ç–æ–π—á–∏–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä–∞—Ö.")
elif avg_temp > 25 and avg_precip < 3:
    st.warning("üí® –¢—ë–ø–ª–∞—è –∏ —Å—É—Ö–∞—è –ø–æ–≥–æ–¥–∞ ‚Äî –≤–æ–∑–º–æ–∂–µ–Ω –¥–µ—Ñ–∏—Ü–∏—Ç –≤–ª–∞–≥–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–∞–ø–µ–ª—å–Ω—ã–π –ø–æ–ª–∏–≤.")
elif avg_temp < 10 and avg_precip > 5:
    st.warning("üåß –•–æ–ª–æ–¥–Ω–æ –∏ –≤–ª–∞–∂–Ω–æ ‚Äî —Ä–∏—Å–∫ –∑–∞–≥–Ω–∏–≤–∞–Ω–∏—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç—Å—Ä–æ—á–∫–∞ –ø–æ—Å–∞–¥–∫–∏.")
elif avg_precip > 10:
    st.warning("‚òîÔ∏è –ú–Ω–æ–≥–æ –æ—Å–∞–¥–∫–æ–≤ ‚Äî –≤–æ–∑–º–æ–∂–Ω–∞ –ø–µ—Ä–µ—É–≤–ª–∞–∂–Ω—ë–Ω–Ω–æ—Å—Ç—å –ø–æ—á–≤—ã.")
else:
    st.success("‚úÖ –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã –¥–ª—è –ø–æ—Å–µ–≤–∞.")

st.markdown("---")
st.markdown("<center><small>–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ —Ö–∞–∫–∞—Ç–æ–Ω–µ. –ê–≤—Ç–æ—Ä: @Dexxeloper ‚Ä¢ 2025</small></center>", unsafe_allow_html=True)

st.markdown("---")
with st.expander("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ"):
    st.markdown("""
    **–ü—Ä–æ–µ–∫—Ç:** NASA Weather Kazakhstan  
    **–ê–≤—Ç–æ—Ä:** Dexxeloper (AGROKAZAKH )  
    **–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:** NASA POWER (https://power.larc.nasa.gov)  
    **–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:** Streamlit, Pandas, Folium, Matplotlib  
    **–¶–µ–ª—å:** –°–¥–µ–ª–∞—Ç—å –∞–≥—Ä–æ-–∞–Ω–∞–ª–∏—Ç–∏–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ–π –∫–∞–∂–¥–æ–º—É —Ñ–µ—Ä–º–µ—Ä—É.

    üåê GitHub: [–ü–µ—Ä–µ–π—Ç–∏](https://github.com/Dexxeloper/nasa-weather-kazakhstan)  
    üìä –û–Ω–ª–∞–π–Ω: [Streamlit App](https://nasa-weather-kazakhstan-n7oskv2uzq3ipbpskj2tzb.streamlit.app/)
    """)


