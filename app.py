import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# –ó–∞–≥—Ä—É–∂–∞–µ–º CSV
df = pd.read_csv("weather_kazakhstan.csv", parse_dates=['date'])
df.set_index('date', inplace=True)

# –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ª–æ–≤–∏–π
def classify_conditions(temp, rain):
    if rain < 5:
        return "–ó–∞—Å—É—Ö–∞"
    elif rain > 20:
        return "–ü–µ—Ä–µ—É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ"
    elif temp < 5:
        return "–°–ª–∏—à–∫–æ–º —Ö–æ–ª–æ–¥–Ω–æ"
    else:
        return "–ù–æ—Ä–º–∞–ª—å–Ω–æ"

def give_recommendation(condition):
    if condition == "–ù–æ—Ä–º–∞–ª—å–Ω–æ":
        return "‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ—Å–∞–¥–∫–∏"
    elif condition == "–ó–∞—Å—É—Ö–∞":
        return "‚ö†Ô∏è –†–∏—Å–∫ –∑–∞—Å—É—Ö–∏ ‚Äì –ø–æ–¥–æ–∂–¥–∏—Ç–µ"
    elif condition == "–ü–µ—Ä–µ—É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ":
        return "‚ö†Ô∏è –ü–µ—Ä–µ—É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ ‚Äì –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è"
    elif condition == "–°–ª–∏—à–∫–æ–º —Ö–æ–ª–æ–¥–Ω–æ":
        return "‚ùÑÔ∏è –°–ª–∏—à–∫–æ–º —Ö–æ–ª–æ–¥–Ω–æ ‚Äì –Ω–µ —Å–∞–∂–∞—Ç—å"
    else:
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

df['condition'] = df.apply(lambda row: classify_conditions(row['temperature_C'], row['precipitation_mm']), axis=1)
df['recommendation'] = df['condition'].apply(give_recommendation)

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("üåæ –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–∞ (–Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö NASA)")
st.write("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç:")

date_range = st.date_input("–î–∏–∞–ø–∞–∑–æ–Ω", [df.index.min().date(), df.index.max().date()])

if len(date_range) == 2:
    start_date, end_date = date_range
    filtered_df = df[(df.index >= pd.to_datetime(start_date)) & (df.index <= pd.to_datetime(end_date))]

    st.subheader("üìà –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞")
    st.line_chart(filtered_df['temperature_C'])

    st.subheader("üåßÔ∏è –û—Å–∞–¥–∫–∏")
    st.line_chart(filtered_df['precipitation_mm'])

    st.subheader("üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–Ω—è–º")
    st.dataframe(filtered_df[['temperature_C', 'precipitation_mm', 'condition', 'recommendation']])
