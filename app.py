import streamlit as st
import pandas as pd
import random
import matplotlib.pyplot as plt
import seaborn as sns

# ‚Äî –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Äî
st.set_page_config(
    page_title="üåæ –ê–≥—Ä–æ-–ü–æ–≥–æ–¥–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞",
    layout="centered",
    page_icon="üå§Ô∏è",
)

st.title("üåæ –ê–≥—Ä–æ-–ü–æ–≥–æ–¥–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞")
st.markdown("–ü–æ–≥–æ–¥–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤, –∞–≥—Ä–∞—Ä–∏–µ–≤ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π.")
st.markdown("""
–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ NASA –ø–æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—É –∏ –ø–æ–º–æ–≥–∞–µ—Ç:
- üìä –ü–æ–Ω–∏–º–∞—Ç—å –ø–æ–≥–æ–¥–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
- üå± –î–µ–ª–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –ø–æ—Å–∞–¥–∫–∏
- üí° –ü–æ–ª—É—á–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
""")
st.markdown("---")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="üå§ NASA Weather Kazakhstan", layout="centered")
st.markdown("<style>h1, h2 { color: #1f77b4; }</style>", unsafe_allow_html=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
for key in ["score", "fails", "rounds", "history"]:
    if key not in st.session_state:
        st.session_state[key] = 0 if key != "history" else []

# –ó–∞–≥—Ä—É–∂–∞–µ–º CSV
df = pd.read_csv("weather_kazakhstan_with_region.csv")
df["date"] = pd.to_datetime(df["date"])

# –í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ (–µ—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –µ—Å—Ç—å)
if "region" in df.columns:
    selected_region = st.selectbox("üåç –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:", sorted(df["region"].unique()))
    df = df[df["region"] == selected_region]
else:
    st.warning("üìå –í –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–≥–∏–æ–Ω–∞—Ö. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–∏–π –∞–Ω–∞–ª–∏–∑.")

# –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω—É
date_min = df["date"].min().date()
date_max = df["date"].max().date()

import random

regions = ['–ê—Å—Ç–∞–Ω–∞', '–ê–ª–º–∞—Ç—ã', '–®—ã–º–∫–µ–Ω—Ç']
df['region'] = [random.choice(regions) for _ in range(len(df))]

# Tabs
tab1, tab2, tab3, tab4, tab5, tab6 = st.tabs([
    "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞",
    "üå± –ü–æ—Å–∞–¥–∏—Ç—å –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∞—Ç—å",
    "üå° –£–≥–∞–¥–∞–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É",
    "üåç –ú–∏—Ä –∏ –∫–ª–∏–º–∞—Ç",
    "üéì –û–±—É—á–µ–Ω–∏–µ –∞–≥—Ä–∞—Ä–∏—è",
    "üéÆ –°–∏–º—É–ª—è—Ü–∏—è —Ñ–µ—Ä–º–µ—Ä–∞"
])



# ===================== üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê =====================
with tab1:
    st.header("–ê–Ω–∞–ª–∏–∑ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π")
    with st.expander("üìÜ –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É?"):
        st.info("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–¥–µ–ª—é –ø–µ—Ä–µ–¥ –ø–æ—Å–∞–¥–∫–æ–π.")
date_range = st.date_input(
    "üìÜ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç:",
    [date_min, date_max],
    min_value=date_min,
    max_value=date_max,
    key="date_range_selector"
)


if isinstance(date_range, tuple) and len(date_range) == 2:
    start, end = date_range
else:
    st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é –∏ –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É.")
    st.stop()


filtered_df = df[(df["date"].dt.date >= start) & (df["date"].dt.date <= end)]

st.line_chart(filtered_df.set_index("date")[["temperature_C", "precipitation_mm"]])

st.subheader("üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–≥–æ–¥–µ")

avg_temp = filtered_df["temperature_C"].mean()
avg_precip = filtered_df["precipitation_mm"].mean()

st.markdown(f"""
- **–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {avg_temp:.1f} ¬∞C  
- **–°—Ä–µ–¥–Ω–∏–µ –æ—Å–∞–¥–∫–∏:** {avg_precip:.1f} –º–º
""")

if avg_temp > 30 and avg_precip < 1:
    st.error("üî• –ñ–∞—Ä–∫–æ –∏ —Å—É—Ö–æ ‚Äî —Ä–∏—Å–∫ –∑–∞—Å—É—Ö–∏!")
elif avg_temp < 10 and avg_precip > 5:
    st.warning("üåß –•–æ–ª–æ–¥–Ω–æ –∏ –≤–ª–∞–∂–Ω–æ ‚Äî –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ —Å –ø–æ—Å–∞–¥–∫–æ–π.")
elif 20 <= avg_temp <= 28 and 1 <= avg_precip <= 5:
    st.success("‚úÖ –û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ—Å–µ–≤–∞!")
else:
    st.info("ü§î –£—Å–ª–æ–≤–∏—è —É–º–µ—Ä–µ–Ω–Ω—ã–µ.")

# ===================== üå± –ò–ì–†–ê ‚Ññ1 =====================
with tab2:
    st.header("üåæ Agro Decision Challenge")

    # –í—ã–±–æ—Ä –∫—É–ª—å—Ç—É—Ä—ã
    crop_type = st.selectbox("üå± –í—ã–±–µ—Ä–∏—Ç–µ –∫—É–ª—å—Ç—É—Ä—É –¥–ª—è –ø–æ—Å–∞–¥–∫–∏:", ["–ü—à–µ–Ω–∏—Ü–∞", "–ö—É–∫—É—Ä—É–∑–∞", "–†–∏—Å"])

    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
    row = df.sample(1).iloc[0]
    date = pd.to_datetime(row["date"]).date()
    temp = row["temperature_C"]
    rain = row["precipitation_mm"]

    st.markdown(f"üìÖ **–î–∞—Ç–∞:** {date}‚ÄÉüå° **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {temp:.1f} ¬∞C‚ÄÉüåß **–û—Å–∞–¥–∫–∏:** {rain:.1f} –º–º")
    st.markdown("### –ß—Ç–æ –≤—ã —Ä–µ—à–∏—Ç–µ —Å–µ–≥–æ–¥–Ω—è?")

    col1, col2 = st.columns(2)
    with col1:
        plant = st.button("üåæ –ü–æ—Å–∞–¥–∏—Ç—å —É—Ä–æ–∂–∞–π", key="plant")
    with col2:
        wait = st.button("‚è≥ –ü–æ–¥–æ–∂–¥–∞—Ç—å", key="wait")

    if plant or wait:
        st.session_state["rounds"] += 1

        # –õ–æ–≥–∏–∫–∞ –∏—Å—Ö–æ–¥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫—É–ª—å—Ç—É—Ä—ã
        outcome = "neutral"
        message = "ü§î –£–º–µ—Ä–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è."

        if crop_type == "–ü—à–µ–Ω–∏—Ü–∞":
            if 15 <= temp <= 25 and 1 <= rain <= 4:
                outcome = "good"
                message = "‚úÖ –û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø—à–µ–Ω–∏—Ü—ã!"
            elif temp > 30 and rain < 1:
                outcome = "bad"
                message = "üî• –°–ª–∏—à–∫–æ–º –∂–∞—Ä–∫–æ –∏ —Å—É—Ö–æ –¥–ª—è –ø—à–µ–Ω–∏—Ü—ã."
            elif temp < 10 and rain > 5:
                outcome = "bad"
                message = "‚ùÑÔ∏è –°–ª–∏—à–∫–æ–º —Ö–æ–ª–æ–¥–Ω–æ –∏ –≤–ª–∞–∂–Ω–æ –¥–ª—è –ø—à–µ–Ω–∏—Ü—ã."

        elif crop_type == "–ö—É–∫—É—Ä—É–∑–∞":
            if 22 <= temp <= 30 and 2 <= rain <= 6:
                outcome = "good"
                message = "üåΩ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∫—É–∫—É—Ä—É–∑—ã!"
            elif temp < 15:
                outcome = "bad"
                message = "ü•∂ –°–ª–∏—à–∫–æ–º —Ö–æ–ª–æ–¥–Ω–æ –¥–ª—è –∫—É–∫—É—Ä—É–∑—ã."
            elif rain > 8:
                outcome = "bad"
                message = "üåä –ó–∞–ª–∏–≤ ‚Äî –∫—É–∫—É—Ä—É–∑–∞ –Ω–µ –≤—ã–∂–∏–≤–µ—Ç."

        elif crop_type == "–†–∏—Å":
            if 24 <= temp <= 32 and rain >= 5:
                outcome = "good"
                message = "üçö –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ –¥–ª—è —Ä–∏—Å–∞!"
            elif rain < 3:
                outcome = "bad"
                message = "üíß –ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –≤–ª–∞–≥–∏ –¥–ª—è —Ä–∏—Å–∞."
            elif temp < 18:
                outcome = "bad"
                message = "‚ùÑÔ∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–µ–ø–ª–∞ –¥–ª—è —Ä–∏—Å–∞."

        # ==== –û—Ü–µ–Ω–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ====
        if plant:
            if outcome == "good":
                st.success(f"üëç –£—Ä–æ–∂–∞–π '{crop_type}' –±—É–¥–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–º! {message}")
                st.image("https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcTZtc3pwdGxuNnVyd2RreG0yMmlvbG1yaWE4aTZwbjc4dnVjaTg3YyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/ii7PnebaafSSlP6dFV/giphy.gif", caption="–†–æ—Å—Ç üå±")
                st.balloons()
                st.session_state["score"] += 1
            elif outcome == "bad":
                st.error(f"üëé –ù–µ—É–¥–∞—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è '{crop_type}'. {message}")
                st.image("https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExazJndXJib2s3d3ZtM2lkZ2psNGN4MjR6aTcxYmpzNGE2cXZydDlkciZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/ZgUU4915HJ7snCN99b/giphy.gif", caption="–ü—Ä–æ–±–ª–µ–º—ã —Å —É—Ä–æ–∂–∞–µ–º ‚ùå")
                st.session_state["fails"] += 1
            else:
                st.info(f"üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ. {message}")
                st.image("https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExa3psdHBvN2hpNG5iYjhpdG1iMzBsdHNieGR1ODk3eTZ6bnU3dThwZiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/kju8pHztX3hTw8uv5c/giphy.gif ", caption="–í—Å—ë —Å–ø–æ–∫–æ–π–Ω–æ üå•")

        else:  # wait
            if outcome == "bad":
                st.success(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–æ–∂–¥–∞–ª–∏ ‚Äî —É—Å–ª–æ–≤–∏—è –ø–ª–æ—Ö–∏–µ –¥–ª—è '{crop_type}'.")
                st.image("https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcTZtc3pwdGxuNnVyd2RreG0yMmlvbG1yaWE4aTZwbjc4dnVjaTg3YyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/ii7PnebaafSSlP6dFV/giphy.gif", caption="–§–µ—Ä–º–µ—Ä –ø–µ—Ä–µ–∂–¥–∞–ª ‚òÅÔ∏è")
                st.session_state["score"] += 1
            elif outcome == "good":
                st.warning(f"üôÉ –í—ã —É–ø—É—Å—Ç–∏–ª–∏ –æ—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è '{crop_type}'.")
                st.image("https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExazJndXJib2s3d3ZtM2lkZ2psNGN4MjR6aTcxYmpzNGE2cXZydDlkciZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/ZgUU4915HJ7snCN99b/giphy.gif", caption="–ñ–∞–ª–∫–æ... üåæ")
                st.session_state["fails"] += 1
            else:
                st.info("üôÇ –†–µ—à–µ–Ω–∏–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å ‚Äî —Ä–∞–∑—É–º–Ω–æ –≤ —Ç–∞–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.")
                st.image("https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExa3psdHBvN2hpNG5iYjhpdG1iMzBsdHNieGR1ODk3eTZ6bnU3dThwZiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/kju8pHztX3hTw8uv5c/giphy.gif", caption="–ü–æ–∫–∞ —á—Ç–æ –≤—Å—ë —Ç–∏—Ö–æ üå§")

            st.markdown("---")
            st.subheader("üìà –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")

            col1, col2, col3 = st.columns(3)
            col1.metric("‚úÖ –£—Å–ø–µ—à–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è", st.session_state["score"])
            col2.metric("‚ùå –û—à–∏–±–∫–∏", st.session_state["fails"])
            col3.metric("üîÅ –†–∞—É–Ω–¥—ã", st.session_state["rounds"])

            if st.session_state["rounds"] > 0:
                success_rate = (st.session_state["score"] / st.session_state["rounds"]) * 100
                st.markdown(f"**üéØ –¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π:** {success_rate:.1f}%")
    

# ===================== üå° –ò–ì–†–ê ‚Ññ2 =====================
with tab3:
    st.header("üå° –£–≥–∞–¥–∞–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É")

row = df.sample(1).iloc[0]
date = pd.to_datetime(row["date"]).date()
true_temp = row["temperature_C"]
rain = row["precipitation_mm"]

st.markdown(f"üìÖ **–î–∞—Ç–∞:** {date}‚ÄÉüåß **–û—Å–∞–¥–∫–∏:** {rain:.1f} –º–º")

guess = st.slider("–£–≥–∞–¥–∞–π—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É (¬∞C):", -40, 50, 20)

if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", key="check_temp"):
    st.session_state["rounds"] += 1
    diff = abs(true_temp - guess)
    if diff <= 2:
        st.balloons()
        st.success(f"üéØ –ü–æ—á—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ! –ë—ã–ª–æ {true_temp:.1f} ¬∞C.")
        st.session_state["score"] += 1
    elif diff <= 5:
        st.info(f"üôÇ –ù–µ–ø–ª–æ—Ö–æ. –ë—ã–ª–æ {true_temp:.1f} ¬∞C.")
    else:
        st.error(f"üòï –û—à–∏–±–∫–∞. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ: {true_temp:.1f} ¬∞C.")
        st.session_state["fails"] += 1
if avg_temp > 30 and avg_precip < 1:
    st.error("üî• –û—á–µ–Ω—å –∂–∞—Ä–∫–æ –∏ —Å—É—Ö–æ ‚Äî –≤—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∑–∞—Å—É—Ö–∏. –ü–æ–¥—É–º–∞–π—Ç–µ –æ–± —É—Å—Ç–æ–π—á–∏–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä–∞—Ö.")
elif avg_temp > 25 and avg_precip < 3:
    st.warning("üí® –¢—ë–ø–ª–∞—è –∏ —Å—É—Ö–∞—è –ø–æ–≥–æ–¥–∞ ‚Äî –≤–æ–∑–º–æ–∂–µ–Ω –¥–µ—Ñ–∏—Ü–∏—Ç –≤–ª–∞–≥–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–∞–ø–µ–ª—å–Ω—ã–π –ø–æ–ª–∏–≤.")
elif avg_temp < 10 and avg_precip > 5:
    st.warning("üåß –•–æ–ª–æ–¥–Ω–æ –∏ –≤–ª–∞–∂–Ω–æ ‚Äî —Ä–∏—Å–∫ –∑–∞–≥–Ω–∏–≤–∞–Ω–∏—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç—Å—Ä–æ—á–∫–∞ –ø–æ—Å–∞–¥–∫–∏.")
elif avg_precip > 10:
    st.warning("‚òîÔ∏è –ú–Ω–æ–≥–æ –æ—Å–∞–¥–∫–æ–≤ ‚Äî –≤–æ–∑–º–æ–∂–Ω–∞ –ø–µ—Ä–µ—É–≤–ª–∞–∂–Ω—ë–Ω–Ω–æ—Å—Ç—å –ø–æ—á–≤—ã.")
else:
    st.success("‚úÖ –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã –¥–ª—è –ø–æ—Å–µ–≤–∞.")

with tab4:
    import folium
    from streamlit_folium import st_folium

    st.header("üåç –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–Ω–¥—ã")
    st.markdown("–°—Ä–∞–≤–Ω–∏—Ç–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏ –º–∏—Ä–∞.")

    # –ü—Ä–∏–º–µ—Ä –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏ –∑–Ω–∞—á–µ–Ω–∏–π (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)
    climate_data = [
        {"name": "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "lat": 48.0, "lon": 67.0, "temp": 25, "rain": 3},
        {"name": "–°–®–ê", "lat": 39.0, "lon": -98.0, "temp": 30, "rain": 2},
        {"name": "–ë—Ä–∞–∑–∏–ª–∏—è", "lat": -10.0, "lon": -55.0, "temp": 28, "rain": 6},
        {"name": "–ò–Ω–¥–∏—è", "lat": 20.0, "lon": 78.0, "temp": 32, "rain": 8},
        {"name": "–ö–µ–Ω–∏—è", "lat": -1.0, "lon": 37.0, "temp": 27, "rain": 5},
    ]

    # –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç—É
    world_map = folium.Map(location=[30, 0], zoom_start=2)

    for entry in climate_data:
        tooltip = f"{entry['name']}<br>üå° {entry['temp']} ¬∞C<br>üåß {entry['rain']} –º–º"
        folium.CircleMarker(
            location=[entry['lat'], entry['lon']],
            radius=10,
            popup=tooltip,
            color="blue" if entry['rain'] > 5 else "red",
            fill=True,
            fill_color="green" if entry['temp'] <= 28 else "orange",
            fill_opacity=0.7
        ).add_to(world_map)

    st_folium(world_map, width=700, height=450)

    # ===================== üéì –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–´–ô –ë–õ–û–ö =====================
with tab5:
    st.header("üéì –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –±–ª–æ–∫: –ö–∞–∫ —Å—Ç–∞—Ç—å –∞–≥—Ä–∞—Ä–∏–µ–º –±—É–¥—É—â–µ–≥–æ")

    st.markdown("""
    –ó–¥–µ—Å—å –≤—ã —É–∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∞–≥—Ä–∞—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç NASA.

    ---  
    ### üõ∞ –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º?
    - **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)** ‚Äì –≤–ª–∏—è–µ—Ç –Ω–∞ –≤—ã–±–æ—Ä –∫—É–ª—å—Ç—É—Ä  
    - **–û—Å–∞–¥–∫–∏ (–º–º)** ‚Äì –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–æ–ª–∏–≤–∞  
    - **–ò–Ω–¥–µ–∫—Å NDVI** *(–≤ –±—É–¥—É—â–µ–º)* ‚Äì –∑–¥–æ—Ä–æ–≤—å–µ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏  
    - **–í–ª–∞–∂–Ω–æ—Å—Ç—å –ø–æ—á–≤—ã** *(–¥–∞–Ω–Ω—ã–µ SMAP)* ‚Äì –ø–æ–º–æ–≥–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–∏–≤  

    ---  
    ### üåæ –ö–æ–≥–¥–∞ –ª—É—á—à–µ —Å–∞–∂–∞—Ç—å?
    - ‚úÖ **–û–ø—Ç–∏–º—É–º:** 20‚Äì28‚ÄØ¬∞C, 1‚Äì5 –º–º –æ—Å–∞–¥–∫–æ–≤  
    - ‚ö†Ô∏è **–†–∏—Å–∫ –∑–∞—Å—É—Ö–∏:** >30‚ÄØ¬∞C –∏ <1 –º–º  
    - ‚ö†Ô∏è **–†–∏—Å–∫ –≥–Ω–∏–µ–Ω–∏—è:** <10‚ÄØ¬∞C –∏ >5 –º–º  

    ---
    ### üöÄ –ß—Ç–æ –¥–∞–ª—å—à–µ?
    - –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ:
        - –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—á–≤—ã
        - —Å–æ–ª–Ω–µ—á–Ω–æ–π —Ä–∞–¥–∏–∞—Ü–∏–∏
        - –∏–Ω–¥–µ–∫—Å–∞ NDVI
        - —Å–∏–º—É–ª—è—Ü–∏–∏ —Ä–æ—Å—Ç–∞ –∫—É–ª—å—Ç—É—Ä

    """)

    st.success("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –∏ —Å—Ç–∞–Ω—å—Ç–µ —Ü–∏—Ñ—Ä–æ–≤—ã–º —Ñ–µ—Ä–º–µ—Ä–æ–º!")

    with st.expander("üìö –ß—Ç–æ —Ç–∞–∫–æ–µ NDVI?"):
        st.markdown("""
        **NDVI (Normalized Difference Vegetation Index)** ‚Äî —Å–ø—É—Ç–Ω–∏–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –∑–¥–æ—Ä–æ–≤—å—è —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.

        **–ó–Ω–∞—á–µ–Ω–∏—è NDVI:**
        - üåø > 0.4 ‚Äî –∑–¥–æ—Ä–æ–≤–∞—è —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        - üèú < 0.2 ‚Äî –ø—É—Å—Ç—ã–Ω—è –∏–ª–∏ –º—ë—Ä—Ç–≤–∞—è –∑–æ–Ω–∞
        - ‚ùÑÔ∏è < 0 ‚Äî –ª—ë–¥ –∏–ª–∏ –æ–±–ª–∞–∫–∞

        üëâ –ú—ã –ø–ª–∞–Ω–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ NDVI –∏–∑ NASA Earth Observations.
        """)
    # ===================== üéÆ –°–ò–ú–£–õ–Ø–¶–ò–Ø –§–ï–†–ú–ï–†–ê =====================
with tab6:
    st.header("üéÆ –°–∏–º—É–ª—è—Ç–æ—Ä —Ñ–µ—Ä–º–µ—Ä–∞")
    st.markdown("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã—Ä–∞—Å—Ç–∏—Ç—å —É—Ä–æ–∂–∞–π, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ NASA!")

    crop_choice = st.selectbox("üåæ –í—ã–±–µ—Ä–∏—Ç–µ –∫—É–ª—å—Ç—É—Ä—É:", ["–ü—à–µ–Ω–∏—Ü–∞", "–ö—É–∫—É—Ä—É–∑–∞", "–†–∏—Å"])

    random_row = df.sample(1).iloc[0]
    sim_temp = random_row["temperature_C"]
    sim_rain = random_row["precipitation_mm"]
    sim_date = pd.to_datetime(random_row["date"]).date()

    st.markdown(f"üìÖ **–î–∞—Ç–∞:** {sim_date} ‚Äî üå° {sim_temp:.1f} ¬∞C ‚Äî üåß {sim_rain:.1f} –º–º")

    if st.button("üöú –ü–æ—Å–∞–¥–∏—Ç—å –∫—É–ª—å—Ç—É—Ä—É"):
        st.markdown("üßë‚Äçüåæ –ü–æ—Å–∞–¥–∫–∞ –∫—É–ª—å—Ç—É—Ä—ã...")
        with st.spinner("‚è≥ –ñ–¥—ë–º –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π..."):
            import time
            time.sleep(2)

        if 20 <= sim_temp <= 28 and 1 <= sim_rain <= 5:
            st.success(f"‚úÖ –£—Ä–æ–∂–∞–π {crop_choice.lower()} –≤–∑–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ!")
            st.image("https://media.giphy.com/media/2kPjz3HM7npVy/giphy.gif", caption="–£—Ä–æ–∂–∞–π —Ä–∞—Å—Ç—ë—Ç üå±")
        elif sim_temp > 30 and sim_rain < 1:
            st.error(f"‚òÄÔ∏è –°–ª–∏—à–∫–æ–º –∂–∞—Ä–∫–æ. –£—Ä–æ–∂–∞–π {crop_choice.lower()} –Ω–µ –≤—ã–∂–∏–ª.")
            st.image("https://media.giphy.com/media/CMczvTCZpsXJq/giphy.gif", caption="–ó–∞—Å—É—Ö–∞ ‚ùå")
        elif sim_temp < 10 and sim_rain > 5:
            st.error(f"‚ùÑÔ∏è –°—ã—Ä–æ—Å—Ç—å –∏ —Ö–æ–ª–æ–¥ –ø–æ–≤—Ä–µ–¥–∏–ª–∏ {crop_choice.lower()}.")
            st.image("https://media.giphy.com/media/j6d5uE5N9bT1OBX1TE/giphy.gif", caption="–ó–∞–º–µ—Ä–∑—à–∞—è —Ñ–µ—Ä–º–∞ ‚ùÑÔ∏è")
        else:
            st.warning("ü§î –£—Ä–æ–∂–∞–π –≤–∑–æ—à—ë–ª —á–∞—Å—Ç–∏—á–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            st.image("https://media.giphy.com/media/gifXZrGSAkbM/giphy.gif", caption="–£–º–µ—Ä–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è")


st.markdown("---")
st.markdown("<center><small>–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ —Ö–∞–∫–∞—Ç–æ–Ω–µ. –ê–≤—Ç–æ—Ä: @Dexxeloper ‚Ä¢ 2025</small></center>", unsafe_allow_html=True)

st.markdown("---")
with st.expander("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ"):
    st.markdown("""
    **–ü—Ä–æ–µ–∫—Ç:** NASA Weather Kazakhstan  
    **–ê–≤—Ç–æ—Ä:** Dexxeloper (AGROKAZAKH )  
    **–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:** NASA POWER (https://power.larc.nasa.gov)  
    **–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:** Streamlit, Pandas, Folium, Matplotlib  
    **–¶–µ–ª—å:** –°–¥–µ–ª–∞—Ç—å –∞–≥—Ä–æ-–∞–Ω–∞–ª–∏—Ç–∏–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ–π –∫–∞–∂–¥–æ–º—É —Ñ–µ—Ä–º–µ—Ä—É.

    üåê GitHub: [–ü–µ—Ä–µ–π—Ç–∏](https://github.com/Dexxeloper/nasa-weather-kazakhstan)  
    üìä –û–Ω–ª–∞–π–Ω: [Streamlit App](https://nasa-weather-kazakhstan-n7oskv2uzq3ipbpskj2tzb.streamlit.app/)
    """)


